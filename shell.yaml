- name: Execute the command in remote shell; stdout goes to the specified file on the remote.
  hosts: all
  become: yes
  tasks:
    - name: run command
      shell: uptime;whoami
      register: shell_output
      become: yes
    - name: output
      debug: var=shell_output
    - name: show ipv4
      debug: var=ansible_default_ipv4.address
    - name: download file with check (md5)
      get_url:
        url: https://github.com/etcd-io/etcd/releases/download/v3.4.15/etcd-v3.4.15-linux-amd64.tar.gz
        dest: /tmp/
        checksum: md5:ef3ea5e2b4dba1e4199d654d34f30636
    - name: Extract etcd
      ansible.builtin.unarchive:
        src: /tmp/etcd-v3.4.15-linux-amd64.tar.gz
        dest: /tmp/
        remote_src: yes
    - name: mv
      shell: mv /tmp/etcd-v3.4.15-linux-amd64/etcd* /usr/local/bin/
      register: shell_output
    - name: mkdir and change access permissions
      shell: mkdir -p /etc/etcd /var/lib/etcd;chmod 0700 /var/lib/etcd
    - name: Copy file with owner and permissions
      ansible.builtin.copy:
        src: certs/ca.crt
        dest: /etc/etcd/
    - name: Copy file with owner and permissions
      ansible.builtin.copy:
        src: certs/etcd.key
        dest: /etc/etcd/
    - name: Copy file with owner and permissions
      ansible.builtin.copy:
        src: certs/etcd.crt
        dest: /etc/etcd/
    - name: Copy file with owner and permissions
      ansible.builtin.copy:
        src: files/etcd.service
        dest: /etc/systemd/system/
    - name: REGEX internal ip
      ansible.builtin.replace:
        path: /etc/systemd/system/etcd.service
        regexp: 'INTERNAL_IP'
        replace: '{{ ansible_default_ipv4.address }}'
    - name: Regex etcdname
      ansible.builtin.replace:
        path: /etc/systemd/system/etcd.service
        regexp: 'ETCD_NAME'
        replace: '{{ ansible_hostname }}'
    - name: reload systemd serice
      ansible.builtin.systemd:
        name: etcd.service
        state: reloaded
    - name: reload systemd serice
      ansible.builtin.systemd:
        name: etcd.service
        state: started



    - name: output
      debug: var=shell_output
